<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jin&#39;s Blog</title>
  
  
  <link href="http://windinjuries.github.io/atom.xml" rel="self"/>
  
  <link href="http://windinjuries.github.io/"/>
  <updated>2023-01-22T04:08:21.279Z</updated>
  <id>http://windinjuries.github.io/</id>
  
  <author>
    <name>Jin Feng</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>git-tutorial</title>
    <link href="http://windinjuries.github.io/2023/01/22/git-tutorial/"/>
    <id>http://windinjuries.github.io/2023/01/22/git-tutorial/</id>
    <published>2023-01-22T03:47:31.000Z</published>
    <updated>2023-01-22T04:08:21.279Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>git���</p></blockquote><h1 id="git���л���"><a href="#git���л���" class="headerlink" title="git���л���"></a>git���л���</h1><img                       lazyload                     src="/images/loading.svg"                     data-src="https://pics3.baidu.com/feed/060828381f30e924cf58912ff7f6df001c95f731.png@f_auto?token=5f22234691edc77a39cdc160b21e67b2"                      alt="neovim" style="zoom: 80%;"                 >��ͼ������ git ������ڲ�ͬ�����������в�ͬ�Ĵ洢λ�ã�ͨ����ͬ�� git ����ı� git ����Ĵ洢�������ڡ�]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;git���&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;git���л���&quot;&gt;&lt;a href=&quot;#git���л���&quot; class=&quot;headerlink&quot; title=&quot;git���л���&quot;&gt;&lt;/a&gt;git���л���&lt;/h1&gt;</summary>
      
    
    
    
    
    <category term="git" scheme="http://windinjuries.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>hexo + github = blog</title>
    <link href="http://windinjuries.github.io/2023/01/01/hexo-github-blog/"/>
    <id>http://windinjuries.github.io/2023/01/01/hexo-github-blog/</id>
    <published>2023-01-01T01:21:23.000Z</published>
    <updated>2023-01-22T03:34:08.766Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><code>Hexo + GitHub</code>可以组成免费的个人博客网站，<code>Hexo</code>是高效的静态网站生成框架，它基于<code>Node.js</code>，快速，简单且功能强大，是搭建博客的首选框架。大家可以进入Hexo官网进行详细查看，因为<code>Hexo</code>的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。通过<code>Hexo</code>，你可以直接使用<code>Markdown</code>语法来撰写博客。写完后只需两三条命令即可将生成的网页上传到<code>github</code>或者<code>coding</code>等代码管理托管平台。</p></blockquote><h1 id="hexo搭建教程"><a href="#hexo搭建教程" class="headerlink" title="hexo搭建教程"></a>hexo搭建教程</h1><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><ul><li>Node.js</li><li>git</li><li>python3</li></ul><h2 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h2><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装hexo</span></span><br><span class="line">npm install -g hexo-cli </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">初始化项目</span></span><br><span class="line">hexo init &lt;folder&gt;     </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">进入项目文件夹</span></span><br><span class="line">cd &lt;folder&gt; </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装必备组件</span></span><br><span class="line">npm install</span><br></pre></td></tr></table></figure></div><h2 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h2><p><a class="link"   href="https://hexo.io/themes/" >主题参考<i class="fa-solid fa-up-right-from-square"></i></a></p><ol><li>选择主题下载</li></ol><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master https://github.com/Longlongyu/hexo-theme-Cxo themes/Cxo</span><br></pre></td></tr></table></figure></div><p>2.更改配置文件<code>_config.yml</code>，注意将themes文件夹下的主题文件夹改为与配置的名字一致</p><div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: https://hexo.io/plugins/</span></span><br><span class="line"><span class="comment">## Themes: https://hexo.io/themes/</span></span><br><span class="line"><span class="attr">theme:</span> <span class="string">Cxo</span></span><br></pre></td></tr></table></figure></div><p>3.执行命令包括清除、生成、部署</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo g </span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure></div><h2 id="GitHub配置"><a href="#GitHub配置" class="headerlink" title="GitHub配置"></a>GitHub配置</h2><ol><li>创建仓库</li></ol><p>新建一个名为<code>yourusername.github.io</code>的仓库，如果你的github用户名是test，那么你就新建<code>test.github.io</code>的仓库。将来你的网站访问地址就是 <a class="link"   href="https://test.gtihub.io/" >https://test.gtihub.io<i class="fa-solid fa-up-right-from-square"></i></a></p><ol start="2"><li><p>配置SSH key</p><p>1、运行命令： <code>ssh-keygen -t rsa -c &quot;邮件地址&quot;</code> 。邮件地址可以登录你的github - <code>setting</code> - <code>emails</code> 查看<br>2、然后连续3次回车，最终会生成一个文件在用户目录下<br>3、打开用户目录，找到 <code>.ssh\id_rsa.pub</code> 文件，记事本打开并复制里面的内容<br>4、打开你的github主页，进入 <code>个人设置</code> - <code>ssh and gpg keys</code> - <code>new ssh key</code>将刚复制的内容粘贴到key那里，title随便填，保存。<br>5、测试连接 运行命令： <code>ssh -t git@github.com</code> 。<strong>注意这条命令不用修改，直接运行</strong><br>6、全局配置</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;selier&quot;         #你的github用户名，非昵称</span><br><span class="line">git config --global user.email  &quot;邮箱@qq.com&quot;  # 填写你的github注册邮箱</span><br></pre></td></tr></table></figure></div></li></ol><h2 id="博客创建"><a href="#博客创建" class="headerlink" title="博客创建"></a>博客创建</h2><h3 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置 __config.yml"></a>配置 <code>__config.yml</code></h3><div class="highlight-container" data-rel="Yaml"><figure class="iseeu highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#配置发布方式</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://github.com/windinjuries/windinjuries.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">main</span></span><br></pre></td></tr></table></figure></div><h3 id="创建博客"><a href="#创建博客" class="headerlink" title="创建博客"></a>创建博客</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">hexo clean </span><br><span class="line">hexo new &quot;postName&quot; #新建文章</span><br><span class="line">hexo new page &quot;pageName&quot; #新建页面</span><br><span class="line">hexo generate #生成静态页面至public目录</span><br><span class="line">hexo server #开启预览访问端口（默认端口4000，&#x27;ctrl + c&#x27;关闭server）</span><br><span class="line">hexo deploy #部署到GitHub</span><br></pre></td></tr></table></figure></div><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="1-hexo-d出现"><a href="#1-hexo-d出现" class="headerlink" title="1.hexo d出现"></a>1.hexo d出现</h3><h3 id="2-node-环境变量windows与WSL冲突"><a href="#2-node-环境变量windows与WSL冲突" class="headerlink" title="2.node 环境变量windows与WSL冲突"></a>2.node 环境变量windows与WSL冲突</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. D:\Anaconda3\</span><br><span class="line">2. D:\Anaconda3\Scripts\</span><br><span class="line">3. D:\Anaconda3\Library\bin\</span><br><span class="line">4. C:\Program Files\nodejs\</span><br><span class="line">//通过删除windows环境变量避免冲突</span><br></pre></td></tr></table></figure></div>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Hexo + GitHub&lt;/code&gt;可以组成免费的个人博客网站，&lt;code&gt;Hexo&lt;/code&gt;是高效的静态网站生成框架，它基于&lt;code&gt;Node.js&lt;/code&gt;，快速，简单且功能强大，是搭建博客的首选框架。大家可以进入He</summary>
      
    
    
    
    
    <category term="hexo" scheme="http://windinjuries.github.io/tags/hexo/"/>
    
    <category term="github" scheme="http://windinjuries.github.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>neovim tutorial</title>
    <link href="http://windinjuries.github.io/2022/12/23/neovim%E6%95%99%E7%A8%8B/"/>
    <id>http://windinjuries.github.io/2022/12/23/neovim%E6%95%99%E7%A8%8B/</id>
    <published>2022-12-23T04:18:18.000Z</published>
    <updated>2023-01-12T07:57:23.651Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Neovim在GitHub上自述为<em>Vim-fork focused on extensibility and usability</em>，所以自Neovim诞生以来，它就专注于提高自己的扩展性与易用性，例如内置终端、异步执行这两个比较重要的功能都是Neovim率先支持，而Vim追赶在后的。经过多年在各自赛道上的发展，Neovim与Vim已经产生了不少差异。不过现阶段来看，<strong>Neovim的特性仍然几乎是Vim的超集</strong>，也就是说除了自己独有的功能外，Neovim还支持Vim的绝大部分功能。</p></blockquote><img                       lazyload                     src="/images/loading.svg"                     data-src="https://picx.zhimg.com/v2-300e97a93f78e336e63861b9b6df9910_r.jpg?source=172ae18b1b9b6df9910_r.jpg"                      alt="neovim" style="zoom: 50%;"                 ><h1 id="neovim"><a href="#neovim" class="headerlink" title="neovim"></a>neovim</h1><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p><a class="link"   href="https://github.com/nshen/learn-neovim-lua/tree/bak" >学习 Neovim 全 lua 配置<i class="fa-solid fa-up-right-from-square"></i></a></p><h2 id="环境安装"><a href="#环境安装" class="headerlink" title="环境安装"></a>环境安装</h2><h3 id="安装WSL2"><a href="#安装WSL2" class="headerlink" title="安装WSL2"></a>安装WSL2</h3><h3 id="安装neovim"><a href="#安装neovim" class="headerlink" title="安装neovim"></a>安装neovim</h3><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装稳定版/不稳定版</span></span><br><span class="line">sudo add-apt-repository ppa:neovim-ppa/stable</span><br><span class="line">sudo add-apt-repository ppa:neovim-ppa/unstable</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install neovim</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看有哪些neovim版本</span></span><br><span class="line">sudo apt install apt-show-versions </span><br><span class="line">apt-show-versions -a neovim</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">选择合适的版本安装</span></span><br><span class="line">sudo apt-get install neovim=0.4.4-1~ubuntu20.04.1~ppa1</span><br></pre></td></tr></table></figure></div><h2 id="配置方式"><a href="#配置方式" class="headerlink" title="配置方式"></a>配置方式</h2><h3 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h3><p>配置文件路径</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.config/nvim/init.vim</span><br></pre></td></tr></table></figure></div><h3 id="lua"><a href="#lua" class="headerlink" title="lua"></a>lua</h3><p>配置文件路径：</p><div class="highlight-container" data-rel="Bash"><figure class="iseeu highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~/.config/nvim/init.lua</span><br></pre></td></tr></table></figure></div><p>.vim可以调用.lua配置文件，实现混合配置 ，或者是纯lua编程，接下来所有配置采用Lua编程方式</p><h2 id="插件管理"><a href="#插件管理" class="headerlink" title="插件管理"></a>插件管理</h2><ol><li>安装 Packer.nvim 插件管理器</li></ol><p>之前 <code>vim</code> 最常见的插件管理应该是 <a class="link"   href="https://github.com/junegunn/vim-plug" >vim-plug<i class="fa-solid fa-up-right-from-square"></i></a> 我也用过，但 <code>Neovim</code> 0.5 以后一般都会推荐使用 <code>lua</code> 原生的 <a class="link"   href="https://github.com/wbthomason/packer.nvim" >packer.nvim<i class="fa-solid fa-up-right-from-square"></i></a> 做插件管理 。</p><div class="highlight-container" data-rel="Shell"><figure class="iseeu highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone --depth 1 https://github.com/wbthomason/packer.nvim\</span><br><span class="line"> ~/.local/share/nvim/site/pack/packer/start/packer.nvim</span><br></pre></td></tr></table></figure></div><ol start="2"><li>创建插件配置文件lua&#x2F;plugins.lua</li></ol><div class="highlight-container" data-rel="Lua"><figure class="iseeu highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> <span class="built_in">require</span>(<span class="string">&#x27;packer&#x27;</span>).startup(<span class="function"><span class="keyword">function</span><span class="params">()</span></span></span><br><span class="line">  <span class="comment">-- Packer can manage itself</span></span><br><span class="line">  use <span class="string">&#x27;wbthomason/packer.nvim&#x27;</span></span><br><span class="line"><span class="keyword">end</span>)</span><br></pre></td></tr></table></figure></div><ol start="3"><li>修改init.lua,加载插件管理配置文件</li></ol><div class="highlight-container" data-rel="Lua"><figure class="iseeu highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot; Packer插件管理&quot;</span></span><br><span class="line"><span class="built_in">require</span>(<span class="string">&#x27;plugins&#x27;</span>)</span><br></pre></td></tr></table></figure></div><ol start="4"><li>插件安装与更新</li></ol><div class="highlight-container" data-rel="Lua"><figure class="iseeu highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Regenerate compiled loader file</span></span><br><span class="line">:PackerCompile</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Remove any disabled or unused plugins</span></span><br><span class="line">:PackerClean</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Clean, then install missing plugins</span></span><br><span class="line">:PackerInstall</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Clean, then update and install plugins</span></span><br><span class="line">:PackerUpdate</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Perform `PackerUpdate` and then `PackerCompile`</span></span><br><span class="line">:PackerSync</span><br><span class="line"></span><br><span class="line"><span class="comment">-- Loads opt plugin immediately</span></span><br><span class="line">:PackerLoad completion-nvim ale</span><br></pre></td></tr></table></figure></div><h2 id="主题管理"><a href="#主题管理" class="headerlink" title="主题管理"></a>主题管理</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;Neovim在GitHub上自述为&lt;em&gt;Vim-fork focused on extensibility and usability&lt;/em&gt;，所以自Neovim诞生以来，它就专注于提高自己的扩展性与易用性，例如内置终端、异步执行这两个比较重要</summary>
      
    
    
    
    
    <category term="neovim" scheme="http://windinjuries.github.io/tags/neovim/"/>
    
  </entry>
  
</feed>
